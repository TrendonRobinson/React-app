{"version":3,"sources":["Components/NavBar.js","Components/WordCard.js","Components/WordList.js","Components/GameCard.js","Components/WordGame.js","Components/Definition.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","to","WordCard","props","word","data","meanings","map","element","partOfSpeech","definitions","definition","phonetic","onClick","phonetics","audio","Audio","play","type","src","alt","remove","WordList","cards","GameCard","useState","check","setCheck","shake","setShake","handleSubmit","event","target","parentNode","children","value","replace","toLowerCase","setTimeout","h","v","r","WordGame","newArray","words","forEach","index","push","Definition","title","App","wordData","setWordData","setWord","myWords","setMyWords","setDefinitions","setWords","handleReformation","tempWordArray","tempDefinitionArray","handleClick","fetch","then","res","json","result","myWord","Math","floor","random","length","useEffect","path","exact","onKeyPress","code","searchedWord","placeholder","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c14bdcc5.chunk.js","sourcesContent":["// Placeholder\n\n// Styling\nimport './NavBar.css';\n\n// React Import\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n// Variables\nlet url = \"https://test.api.amadeus.com/v2\"\n\n// Component\nexport default function NavBar() {\n\n    return (\n        <div className='navbar'>\n            <Link to=''>Home</Link>\n            <Link to='/my-words'>My Words</Link>\n            <Link to='/word-game'>Word Game</Link>\n        </div>\n    )\n\n}","// Placeholder\n\n// Styling\nimport './WordCard.css';\n\n// React Import\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n// Variables\n\n\n// Component\n\nexport default function WordCard(props) {\n\n\n    // Defining as a single variables\n    let word = props.data[0]\n\n    // Functions\n    function handleSound() {\n        let current = word\n        let phonetics = current.phonetics[0].audio\n        let sound = 'https:'+phonetics\n        let audio = new Audio(sound)\n    \n        audio.play()\n    }\n\n    // Listing out meanings\n    let meanings = word.meanings.map((element) => {\n        return (\n            <li className=\"card-meaning\">\n                 {`(${element.partOfSpeech}) ${element.definitions[0].definition}`}\n            </li>\n        )\n    })\n\n    function handleClick() {\n\n        props.remove(props.data[0])\n    }\n\n    return (\n        <div className=\"WordCard\">\n            <h2>{word.word}</h2>\n            <span className=\"sound\"><h3>&#47;{word.phonetic}&#47;</h3> <input onClick={handleSound} className=\"SoundButton\" type=\"image\" src=\"https://static.thenounproject.com/png/4227067-200.png\" alt=\"sound\"/> </span>\n            <hr/>\n            <ul>{meanings}</ul>\n            <button onClick={handleClick} className=\"Remove\">Remove</button>\n        </div>\n    )\n\n}","// Placeholder\n\n// Styling\nimport './WordList.css';\n\n// React Import\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n// Variables\nimport Card from './WordCard'\n\n// Component\nexport default function WordList(props) {\n\n    let cards = props.data.map((element) => {\n\n        return (\n            <Card data={element} remove={props.remove}/>\n        )\n    }) \n\n    return (\n        <div className='WordList'>\n            {cards}\n        </div>\n    )\n\n}","// Placeholder\n\n// Styling\nimport './GameCard.css';\n\n// React Import\nimport React, {useState} from \"react\";\nimport { Shake, ShakeLittle, ShakeSlow, ShakeHorizontal } from 'reshake'\n\n// Variables\nlet delayInMilliseconds = 1000; //1 second\n\n//function \nfunction Seconds(amount) {\n    return delayInMilliseconds * amount\n}\n\n// Component\n\nexport default function GameCard(props) {\n\n    const [check, setCheck] = useState(false)\n    const [shake, setShake] = useState(false)\n\n    // Variables\n    let word = props.data[0]\n\n    // Functions\n    function handleSubmit(event){\n        let inputField = event.target.parentNode.children[0]\n        let inputFieldText = inputField.value.replace(/ /g, \"\");\n        let answer = inputFieldText.toLowerCase()\n\n        if (answer === word.toLowerCase()) {\n            setCheck(true)\n\n            \n        } else {\n            setShake(true)\n            setTimeout(function() {\n                setShake(false)\n              }, Seconds(.5));\n        }\n\n    }\n\n    return (\n        <div className=\"GameCard\">\n            {check ? <h1 className=\"answer\">{props.data[0]}</h1> : <input className=\"word-box\"/>}\n            <h3>{props.data[1]}</h3>\n            <hr/>\n            {check ? <div/> : shake ? \n            <ShakeLittle h={20} v={0} r={3}>\n                <button onClick={handleSubmit} className=\"Wrong\">\n                    Wrong\n                </button>\n            </ShakeLittle>: \n            <button onClick={handleSubmit} className=\"Submit\">\n                    Submit\n            </button>}\n        </div>\n    )\n}","// Placeholder\n\n// Styling\nimport './WordGame.css';\n\n// React Import\nimport React from \"react\";\n\n// Variables\n\n// Components\nimport GameCard from './GameCard'\n\n//function\nfunction shuffle(array) {\n    let currentIndex = array.length,  randomIndex;\n\n  \n    // While there remain elements to shuffle...\n    while (currentIndex !== 0) {\n\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n  \n      // And swap it with the current element.\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex], array[currentIndex]];\n    }\n  \n    return array;\n  }\n  \n\n// Component\nexport default function WordGame(props) {\n\n    let newArray = []\n\n    props.words.forEach((element, index) => {\n        newArray.push([element, props.definitions[index]])\n    })\n\n    let cards = newArray.map((element) => {\n\n        return (\n            <GameCard data={element}/>\n        )\n    })\n\n    return (\n        <div className='WordGame'>\n            {cards}\n        </div>\n    )\n\n}\n","// Placeholder\n\n// Styling\nimport './Definition.css';\n\n// React Import\nimport React, {useState} from \"react\";\n\n// Variables\n\n\n// Component\nexport default function Definition(props) {\n\n    let meanings\n\n    if (props.data !== \"\" && !props.data.title) {\n\n        meanings = props.data[0].meanings.map((element) => {\n            return (\n                <div className=\"meaning\">\n                     {`(${element.partOfSpeech}) ${element.definitions[0].definition}`}\n                </div>\n            )\n        })\n    }\n\n\n    return (\n        <div className='Definition'>\n            {props.data[0] ? <div>\n            <h1>\n                {props.data[0].word}\n            </h1>\n            <h2> \n                {`/${props.data[0].phonetic}/`}\n            </h2>\n\n            <div className=\"meanings\">\n            {meanings ? meanings:`(${props.data[0].meanings[0].partOfSpeech}) ${props.data[0].meanings[0].definitions[0].definition}`}\n            </div>\n            </div>: <div> \n\n            <h1>\n                {props.data.title}\n            </h1>\n                \n            </div>}\n        </div>\n    )\n\n}","// Placeholder\n\n// Styling\nimport './App.css';\n\n// React\nimport React, {useState, useEffect} from \"react\";\nimport {\n  Route\n} from \"react-router-dom\";\n\n// JSON Files\nimport IATA from './Json/airportCodes.json';\n\n// Components\nimport NavBar from './Components/NavBar';\nimport WordList from './Components/WordList'\nimport WordGame from './Components/WordGame';\nimport Definition from './Components/Definition'\n\n// Variables\n\n// API\nlet url = 'https://api.dictionaryapi.dev/api/v2/entries/en/'\n\nfunction App() {\n\n  const [wordData, setWordData] = useState('')\n  const [word, setWord] = useState('hello')\n  const [myWords, setMyWords] = useState([])\n  const [definitions, setDefinitions] = useState([])\n  const [words, setWords] = useState([])\n\n  useEffect(() => {\n    fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`)\n      .then(res => res.json())\n      .then((result) => {\n        setWordData(result)\n      })\n  }, []);\n\n  function handleFetch() {\n    fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`)\n      .then(res => res.json())\n      .then((result) => {\n        setWordData(result)\n      })\n  }\n\n  function handleReformation() {\n    let tempWordArray = []\n    let tempDefinitionArray = []\n    myWords.forEach((element) => {\n      tempWordArray.push(element[0].word)\n      tempDefinitionArray.push(element[0].meanings[0].definitions[0].definition)\n      setWords(tempWordArray)\n      setDefinitions(tempDefinitionArray)\n    })\n  }\n\n\n  function handleClick() {\n    setWordData({\n      title: 'Finding Another Word...'\n    })\n    fetch(`https://random-word-api.herokuapp.com/word?number=10`)\n      .then(res => res.json())\n      .then((result) => {\n        let myWord = result[Math.floor(Math.random()*result.length)];\n        setWord(myWord)\n        fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${myWord}`)\n          .then(res => res.json())\n          .then((result) => {\n            setWordData(result)\n            if (result.title) {\n              setWordData({\n                title: 'Finding Another Word'\n              })\n              handleClick()\n            }\n          })\n      })\n  }\n\n  function handleSearch(event) {\n    if (event.code === \"Enter\") {\n\n      let searchedWord = event.target.value\n\n      setWordData({\n        title: 'Finding Your Word...'\n      })\n      fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${searchedWord}`)\n      .then(res => res.json())\n      .then((result) => {\n        setWordData(result)\n        if (result.title) {\n          setWordData({\n            title: 'Could not find your word.'\n          })\n          handleClick()\n        }\n      })\n    }\n  }\n\n\n  function handleRemoveFromList(data) {\n    setMyWords(myWords.filter((word) => {\n      return word[0].word !== data.word\n    }))\n    handleReformation()\n  }\n\n  function handleAddToList() {\n    myWords.push(wordData)\n    setMyWords(myWords)\n    handleReformation()\n  }\n\n  function handleSound() {\n    let current = wordData[0]\n    let phonetics = current.phonetics[0].audio\n    let sound = 'https:'+phonetics\n    let audio = new Audio(sound)\n\n    audio.play()\n\n  }\n\n  return (\n    <div className=\"dictionary\">\n      <NavBar/>\n\n      <Route path=\"/\" exact>\n        <div className=\"center\">\n\n          <input onKeyPress={handleSearch} className=\"Search\" type=\"text\" placeholder=\"Search a Word\"/>\n\n          <Definition data={wordData}/>\n          <div className=\"buttons\">\n            <button onClick={handleSound} className='button'>\n              Sound\n            </button>\n            <button onClick={handleClick} className='button'>\n              Next Word\n            </button>\n            <button onClick={handleAddToList} className='button'>\n              Add to List\n            </button>\n          </div>\n        </div>\n      </Route>\n\n      <Route path=\"/my-words\" exact>\n        <WordList data={myWords} remove={handleRemoveFromList}/>\n      </Route>\n\n      <Route path=\"/word-game\" exact>\n        <WordGame words={words} definitions={definitions}/>\n      </Route>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n  \n    <Router>\n      <App />\n    </Router>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}